/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgWarungGui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author LENOVO
 */
    

public class cAppWarungGuiJFrame extends javax.swing.JFrame {

    /**
     * Creates new form cAppWarungGuiJFrame
     */
    int jMkn=0, jMnm=0, jPlg=0, jTrans=0, maxMkn=10, maxMnm=7, maxPlg=7, maxTrans=15;
    int jRkp=jMkn+jMnm, maxRkp=maxMkn+maxMnm, totalNPlg=0;
    cMakanan mkn[];
    cMinuman mnm[];
    cPelanggan plg[];
    cTransaksi transaksi[];
    String rkpMenu[];
    int rkpRp[];
        
    public cAppWarungGuiJFrame() {
        mkn = new cMakanan[maxMkn];
        mnm = new cMinuman[maxMnm];
        plg = new cPelanggan[maxPlg];
        transaksi=new cTransaksi[maxTrans];
        rkpMenu=new String[maxRkp];
        rkpRp=new int[maxRkp];
        initComponents();
        
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPaneWarung = new javax.swing.JTabbedPane();
        jPanelMakanan = new javax.swing.JPanel();
        jButtonTambahMkn = new javax.swing.JButton();
        jButtonUbahMkn = new javax.swing.JButton();
        jButtonHapusMkn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMkn = new javax.swing.JTable();
        jPanelMinuman = new javax.swing.JPanel();
        jButtonTambahMnm = new javax.swing.JButton();
        jButtonUbahMnm = new javax.swing.JButton();
        jButtonHapusMnm = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableMnm = new javax.swing.JTable();
        jPanelPelanggan = new javax.swing.JPanel();
        jButtonTambahPlg1 = new javax.swing.JButton();
        jButtonUbahPlg1 = new javax.swing.JButton();
        jButtonHapusPlg1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePlg = new javax.swing.JTable();
        jPaneTransaksi = new javax.swing.JPanel();
        jButtonTransaksi = new javax.swing.JButton();
        jButtonUbahBeli = new javax.swing.JButton();
        jButtonTambahBeli = new javax.swing.JButton();
        jButtonHapusBeli = new javax.swing.JButton();
        jButtonCari = new javax.swing.JButton();
        jButtonCheckOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTransaksi = new javax.swing.JTable();
        jLabelPembeli = new javax.swing.JLabel();
        jTFPembeli = new javax.swing.JTextField();
        Kode = new javax.swing.JLabel();
        jTFKode = new javax.swing.JTextField();
        jPanelRekap = new javax.swing.JPanel();
        jButtonTotalPendapatan = new javax.swing.JButton();
        jButtonPembelianPelanggan = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableRekap = new javax.swing.JTable();
        jLabelTP = new javax.swing.JLabel();
        jTFTotalP = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jButtonTambahMkn.setText("Tambah");
        jButtonTambahMkn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahMknActionPerformed(evt);
            }
        });

        jButtonUbahMkn.setText(" Ubah ");
        jButtonUbahMkn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahMknActionPerformed(evt);
            }
        });

        jButtonHapusMkn.setText("Hapus ");
        jButtonHapusMkn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusMknActionPerformed(evt);
            }
        });

        jTableMkn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableMkn);

        javax.swing.GroupLayout jPanelMakananLayout = new javax.swing.GroupLayout(jPanelMakanan);
        jPanelMakanan.setLayout(jPanelMakananLayout);
        jPanelMakananLayout.setHorizontalGroup(
            jPanelMakananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMakananLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanelMakananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelMakananLayout.createSequentialGroup()
                        .addComponent(jButtonTambahMkn)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbahMkn)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonHapusMkn)))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        jPanelMakananLayout.setVerticalGroup(
            jPanelMakananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMakananLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelMakananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahMkn)
                    .addComponent(jButtonUbahMkn)
                    .addComponent(jButtonHapusMkn))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jTabbedPaneWarung.addTab("Makanan", jPanelMakanan);

        jButtonTambahMnm.setText("Tambah");
        jButtonTambahMnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahMnmActionPerformed(evt);
            }
        });

        jButtonUbahMnm.setText(" Ubah ");
        jButtonUbahMnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahMnmActionPerformed(evt);
            }
        });

        jButtonHapusMnm.setText("Hapus ");
        jButtonHapusMnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusMnmActionPerformed(evt);
            }
        });

        jTableMnm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableMnm);

        javax.swing.GroupLayout jPanelMinumanLayout = new javax.swing.GroupLayout(jPanelMinuman);
        jPanelMinuman.setLayout(jPanelMinumanLayout);
        jPanelMinumanLayout.setHorizontalGroup(
            jPanelMinumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinumanLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanelMinumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelMinumanLayout.createSequentialGroup()
                        .addComponent(jButtonTambahMnm)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbahMnm)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonHapusMnm)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        jPanelMinumanLayout.setVerticalGroup(
            jPanelMinumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinumanLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanelMinumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUbahMnm)
                    .addComponent(jButtonHapusMnm)
                    .addComponent(jButtonTambahMnm))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jTabbedPaneWarung.addTab("Minuman", jPanelMinuman);

        jButtonTambahPlg1.setText("Tambah");
        jButtonTambahPlg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahPlg1ActionPerformed(evt);
            }
        });

        jButtonUbahPlg1.setText(" Ubah ");
        jButtonUbahPlg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahPlg1ActionPerformed(evt);
            }
        });

        jButtonHapusPlg1.setText("Hapus ");
        jButtonHapusPlg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusPlg1ActionPerformed(evt);
            }
        });

        jTablePlg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Kode", "Alamat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablePlg);

        javax.swing.GroupLayout jPanelPelangganLayout = new javax.swing.GroupLayout(jPanelPelanggan);
        jPanelPelanggan.setLayout(jPanelPelangganLayout);
        jPanelPelangganLayout.setHorizontalGroup(
            jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPelangganLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPelangganLayout.createSequentialGroup()
                        .addComponent(jButtonTambahPlg1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbahPlg1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonHapusPlg1)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanelPelangganLayout.setVerticalGroup(
            jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPelangganLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahPlg1)
                    .addComponent(jButtonUbahPlg1)
                    .addComponent(jButtonHapusPlg1))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jTabbedPaneWarung.addTab("Pelanggan", jPanelPelanggan);

        jButtonTransaksi.setText("Buat Transaksi");
        jButtonTransaksi.setFocusable(false);
        jButtonTransaksi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonTransaksi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransaksiActionPerformed(evt);
            }
        });

        jButtonUbahBeli.setText(" Ubah ");
        jButtonUbahBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahBeliActionPerformed(evt);
            }
        });

        jButtonTambahBeli.setText("Tambah");
        jButtonTambahBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahBeliActionPerformed(evt);
            }
        });

        jButtonHapusBeli.setText("Hapus ");
        jButtonHapusBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusBeliActionPerformed(evt);
            }
        });

        jButtonCari.setText("cari");
        jButtonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCariActionPerformed(evt);
            }
        });

        jButtonCheckOut.setText("Checkout");
        jButtonCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckOutActionPerformed(evt);
            }
        });

        jTableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu", "Harga", "Jumlah", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableTransaksi);

        jLabelPembeli.setText("Pembeli : ");

        jTFPembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPembeliActionPerformed(evt);
            }
        });

        Kode.setText("Kode : ");

        javax.swing.GroupLayout jPaneTransaksiLayout = new javax.swing.GroupLayout(jPaneTransaksi);
        jPaneTransaksi.setLayout(jPaneTransaksiLayout);
        jPaneTransaksiLayout.setHorizontalGroup(
            jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneTransaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonTambahBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jButtonUbahBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jButtonHapusBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jButtonCheckOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneTransaksiLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(74, Short.MAX_VALUE))
                    .addGroup(jPaneTransaksiLayout.createSequentialGroup()
                        .addComponent(jButtonTransaksi)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Kode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFKode, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCari)
                        .addGap(38, 38, 38))))
        );
        jPaneTransaksiLayout.setVerticalGroup(
            jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneTransaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonTransaksi)
                    .addGroup(jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPembeli)
                        .addComponent(jButtonCari)
                        .addComponent(Kode)
                        .addComponent(jTFKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPaneTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneTransaksiLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButtonTambahBeli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUbahBeli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonHapusBeli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCheckOut))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPaneWarung.addTab("Transaksi", jPaneTransaksi);

        jButtonTotalPendapatan.setText("Rekap Penjualan");
        jButtonTotalPendapatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTotalPendapatanActionPerformed(evt);
            }
        });

        jButtonPembelianPelanggan.setText("Pembelian Pelanggan");
        jButtonPembelianPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPembelianPelangganActionPerformed(evt);
            }
        });

        jTableRekap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama  ", "Nominal (Rp)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableRekap);

        jLabelTP.setText("Total Pendapatan : Rp");

        javax.swing.GroupLayout jPanelRekapLayout = new javax.swing.GroupLayout(jPanelRekap);
        jPanelRekap.setLayout(jPanelRekapLayout);
        jPanelRekapLayout.setHorizontalGroup(
            jPanelRekapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRekapLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanelRekapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelRekapLayout.createSequentialGroup()
                        .addComponent(jButtonTotalPendapatan)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPembelianPelanggan))
                    .addGroup(jPanelRekapLayout.createSequentialGroup()
                        .addComponent(jLabelTP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFTotalP, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanelRekapLayout.setVerticalGroup(
            jPanelRekapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRekapLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanelRekapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTotalPendapatan)
                    .addComponent(jButtonPembelianPelanggan))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelRekapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTP)
                    .addComponent(jTFTotalP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPaneWarung.addTab("Rekap", jPanelRekap);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneWarung)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneWarung)
        );

        jTabbedPaneWarung.getAccessibleContext().setAccessibleName("Menu");
        jTabbedPaneWarung.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFPembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPembeliActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTFPembeliActionPerformed

    private void jButtonCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckOutActionPerformed
        // TODO add your handling code here:
        if(transaksi[jTrans].getJBeli()!=0){
            int ykn=JOptionPane.showConfirmDialog(this, "Check out?");
            if(ykn==0){
                cMenu r[]=transaksi[jTrans].getBeliMenu();
                int t[]=transaksi[jTrans].total();
                for (int i = 0; i < jRkp; i++) {
                    for (int j = 0; j < transaksi[jTrans].getJBeli(); j++) {
                        if(r[j].getNama().equalsIgnoreCase(rkpMenu[i])){
                            rkpRp[i]=rkpRp[i]+t[j];
                            break;
                        }
                    }
                }
                if(transaksi[jTrans].getPelanggan()!=null){
                    transaksi[jTrans].getPelanggan().setTBlj(transaksi[jTrans].getTA());
                }else if(transaksi[jTrans].getPembeli()!=null){
                    totalNPlg=totalNPlg+transaksi[jTrans].getGTotal();
                }
                boolean selesai=false;
                if(transaksi[jTrans].getBeliMenu()!=null){
                    String c=transaksi[jTrans].keranjangBeli();
                    do{
                        if(transaksi[jTrans].getPelanggan()!=null){
                            double d=transaksi[jTrans].getGTotal()*transaksi[jTrans].getDisc();
                            String disc="\nDiskon 10% : Rp"+d;
                            disc=disc+"\nTOTAL AKHIR : Rp"+transaksi[jTrans].getTA()+"\n";
                            int bayar = Integer.parseInt(JOptionPane.showInputDialog(this,c+disc+"\nNominal uang Rp :" ));
                            if(bayar>=transaksi[jTrans].getGTotal()){
                                double kembali=bayar-transaksi[jTrans].getTA();
                                JOptionPane.showMessageDialog(this, "Kembali : Rp"+kembali+"\n\nTerima Kasih!");
                                selesai=true;
                            }
                        }else{
                            int bayar = Integer.parseInt(JOptionPane.showInputDialog(this,c+"\nNominal uang Rp :" ));
                            if(bayar>=transaksi[jTrans].getGTotal()){
                                double kembali=bayar-transaksi[jTrans].getGTotal();
                                JOptionPane.showMessageDialog(this, "Kembali : Rp"+kembali+"\n\nTerima Kasih!");
                                selesai=true;
                            }
                        }
                        if(selesai==true){
                            jTrans++;
                            jTFPembeli.setText("");
                            jTFKode.setText("");
                            DefaultTableModel model=(DefaultTableModel)jTableTransaksi.getModel();
                            int baris=model.getRowCount();
                            for (int i = 0; i < baris; i++) {
                                model.removeRow(0);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Uang tidak cukup!");
                        }
                    }while(selesai==false);
                }else{
                    JOptionPane.showMessageDialog(this, "Tidak ada pembelian!");
                }
            }else{
                JOptionPane.showMessageDialog(this, "Batal check out...");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Belum ada pembelian...");
        }
    }//GEN-LAST:event_jButtonCheckOutActionPerformed

    private void jButtonHapusBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusBeliActionPerformed
        // TODO add your handling code here:
        if(transaksi[jTrans].getJBeli()!=0){
            String mn=transaksi[jTrans].tampil();
            String hps="    Hapus Menu\n+"+mn;
            hps = hps+"\nPilih menu : ";
            String n=JOptionPane.showInputDialog(this,hps );
            cMenu belimn[]=transaksi[jTrans].getBeliMenu();
            boolean ada=false;
            for (int i = 0; i < transaksi[jTrans].getJBeli(); i++) {
                if(belimn[i].getNama().equalsIgnoreCase(n)){
                    ada=true;
                    int idx=i;
                    int ykn=JOptionPane.showConfirmDialog(this, "Hapus menu "+n+"?");
                    if(ykn==0){
                        String total=transaksi[jTrans].hapusBeli(idx);
                        DefaultTableModel model=(DefaultTableModel)jTableTransaksi.getModel();
                        model.removeRow(i);
                        JOptionPane.showMessageDialog(this, "Menu berhasil dihapus!\n"+total);
                        break;
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal dihapus!");
                    }
                }
            }
            if(ada==false)
            JOptionPane.showMessageDialog(this, "Menu tidak ada!");
        }else{
            JOptionPane.showMessageDialog(this, "Belum ada menu dibeli!");
        }
    }//GEN-LAST:event_jButtonHapusBeliActionPerformed

    private void jButtonTambahBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahBeliActionPerformed
        // TODO add your handling code here:
        String beli; int idx;
        if(transaksi[jTrans].getJBeli()<transaksi[jTrans].getMaxBeli()){
            do{
                String temp= "    PEMBELIAN \nMENU MAKANAN\n";
                for (int i = 0; i < jMkn; i++) {
                    temp=temp+(i+1)+". "+mkn[i].ToString()+"\n";
                }
                temp=temp+"MENU MINUMAN\n";
                for (int i = 0; i < jMnm; i++) {
                    temp=temp+(i+1)+". "+mnm[i].ToString()+"\n";
                }
                temp=temp+"\n---Ketik '0' untuk menyelesaikan pembelian---";
                beli= JOptionPane.showInputDialog(this,temp+"\n Pilihan Menu : " );
                if(!"0".equals(beli)){
                    boolean sdhBeli=false;
                    cMenu m[]=transaksi[jTrans].getBeliMenu();
                    for (int i = 0; i < transaksi[jTrans].getJBeli(); i++) {
                        if(m[i].getNama().equalsIgnoreCase(beli)){
                            sdhBeli=true;
                            JOptionPane.showMessageDialog(this, beli+" sudah dibeli!");
                            break;
                        }
                    }
                    if(sdhBeli==false){
                        int j = Integer.parseInt(JOptionPane.showInputDialog(this, "Jumlah Beli  : "));
                        int ykn=JOptionPane.showConfirmDialog(this, "Beli "+beli+"  ["+j+"] ?");
                        if(ykn==0){
                            DefaultTableModel model=(DefaultTableModel)jTableTransaksi.getModel();
                            boolean ada=false;
                            for (int i = 0; i < jMkn; i++) {
                                if(mkn[i].getNama().equalsIgnoreCase(beli)){
                                    ada=true;
                                    String t=transaksi[jTrans].beli(mkn[i], j);
                                    String row[][]=new String[1][4];
                                    row[0][0]=beli;
                                    row[0][1]=String.valueOf(mkn[i].getHarga());
                                    row[0][2]=String.valueOf(j);
                                    row[0][3]=String.valueOf(j*mkn[i].getHarga());
                                    model.addRow(row[0]);
                                    JOptionPane.showMessageDialog(this, t);
                                    break;
                                }
                            }
                            if(ada==false){
                                for (int i = 0; i < jMnm; i++) {
                                    if(mnm[i].getNama().equalsIgnoreCase(beli)){
                                        ada=true;
                                        String t=transaksi[jTrans].beli(mnm[i], j);
                                        String row[][]=new String[1][4];
                                        row[0][0]=beli;
                                        row[0][1]=String.valueOf(mnm[i].getHarga());
                                        row[0][2]=String.valueOf(j);
                                        row[0][3]=String.valueOf(j*mnm[i].getHarga());
                                        model.addRow(row[0]);
                                        JOptionPane.showMessageDialog(this, t);
                                        break;
                                    }
                                }
                            }
                            if(ada==false){
                                JOptionPane.showMessageDialog(this, "Pilihan tidak tersedia...");
                            }
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal ditambahkan...");
                    }
                }
            }while(!"0".equals(beli));
        }else{
            JOptionPane.showMessageDialog(this, "Telah mencapai maksimal pembelian!");
        }
        JOptionPane.showMessageDialog(this, "Penambahan menu selesai...");
    }//GEN-LAST:event_jButtonTambahBeliActionPerformed

    private void jButtonUbahBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahBeliActionPerformed
        // TODO add your handling code here:
        if(transaksi[jTrans].getJBeli()!=0){
            System.out.println("\n   Ubah Pembelian");
            String t=transaksi[jTrans].tampil();
            String ubh= "   Ubah Pembelian\n";
            ubh = ubh+t;
            ubh = ubh+"\nPilih Menu : ";
            String n=JOptionPane.showInputDialog(this, ubh);
            cMenu m []=transaksi[jTrans].getBeliMenu();
            boolean ada=false; int ykn=3;
            for (int i = 0; i < transaksi[jTrans].getJBeli(); i++) {
                if(m[i].getNama().equalsIgnoreCase(n)){
                    int j=Integer.parseInt(JOptionPane.showInputDialog(this, "Jumlah Baru : "));
                    ykn=JOptionPane.showConfirmDialog(this, "Ubah "+n+"  ["+j+"] ?");
                    ada=true;
                    if(ykn==0){
                        int idx=i;
                        String total=transaksi[jTrans].ubah(idx, j);
                        int totalTabel=j*m[i].getHarga();
                        DefaultTableModel model=(DefaultTableModel)jTableTransaksi.getModel();
                        model.setValueAt(j, i, 2);
                        model.setValueAt(totalTabel, i, 3);
                        JOptionPane.showMessageDialog(this, "Berhasil diubah!\n"+total);
                        break;
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal diubah!");
                    }
                }
            }
            if(ada==false&&ykn!=0){
                JOptionPane.showMessageDialog(this, "Menu "+n+" belum ada!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Belum ada menu dibeli!");
        }
    }//GEN-LAST:event_jButtonUbahBeliActionPerformed

    private void jButtonTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransaksiActionPerformed
        // TODO add your handling code here:
        if(jTrans<maxTrans){
            boolean berhasil=false;
            do{
                JOptionPane.showMessageDialog(this, "Input Pembeli");
                String nP = JOptionPane.showInputDialog(this, "Nama Pembeli  : ");
                String k = JOptionPane.showInputDialog(this, "*Isi(-) jika bukan pelanggan*\nKode Pelanggan  : ");
                transaksi[jTrans]=new cTransaksi();
                String n="";
                if(k.equals("-")){
                    transaksi[jTrans].isiPembeli(nP);
                    JOptionPane.showMessageDialog(this, "Input pembeli berhasil!");
                    n=nP;
                    berhasil=true;
                }else{
                    for (int i = 0; i < jPlg; i++) {
                        if(plg[i].getNama().equalsIgnoreCase(nP) && plg[i].getKode().equals(k)){
                            transaksi[jTrans].isiPembeli(plg[i]);
                            JOptionPane.showMessageDialog(this, "Terdaftar sebagai pelanggan!\n"
                                + "\n  === Potongan 10% ===");
                            n=nP+" ["+plg[i].getKode()+"]";
                            berhasil=true;
                            break;
                        }
                    }
                    if(berhasil==false){
                        JOptionPane.showMessageDialog(this, "Pelanggan tidak ditemukan...");
                    }
                }
                if(berhasil==true){
                    transaksi[jTrans].setKode(jTrans+1);
                    jTFPembeli.setText(n);
                    jTFKode.setText(transaksi[jTrans].getKode());
                }
            }while(berhasil==false);
        }
    }//GEN-LAST:event_jButtonTransaksiActionPerformed

    private void jButtonHapusPlg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusPlg1ActionPerformed
        // TODO add your handling code here:
        if(plg!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Nama Pelanggan  : ");
            String k = JOptionPane.showInputDialog(this, "Kode Pelanggan  : ");
            for (int i = 0; i < jPlg; i++) {
                if(plg[i].getNama().equalsIgnoreCase(n)&&plg[i].getKode().equalsIgnoreCase(k)){
                    JOptionPane.showMessageDialog(this, "Pelanggan ditemukan");
                    ada=true;
                    int ykn=JOptionPane.showConfirmDialog(this, "Hapus pelanggan\n"+n+"  ["+k+"] ?");
                    if(ykn==0){
                        for (int j = i; j < jPlg; j++) {
                            if(j==jPlg-1){
                                plg[j]=null;
                            }else{
                                plg[j]=plg[j+1];
                            }
                        }
                        DefaultTableModel model=(DefaultTableModel)jTablePlg.getModel();
                        model.removeRow(i);
                        JOptionPane.showMessageDialog(this, "Pelanggan berhasil dihapus.....");
                        jPlg--;
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal dihapus...");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Pelanggan "+n+" tidak ada");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Daftar pelanggan kosong...");
        }
    }//GEN-LAST:event_jButtonHapusPlg1ActionPerformed

    private void jButtonUbahPlg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahPlg1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Ubah alamat pelanggan");
        if(plg!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Nama Pelanggan  : ");
            String k = JOptionPane.showInputDialog(this, "Kode Pelanggan  : ");
            for (int i = 0; i < jPlg; i++) {
                if(plg[i].getKode().equals(k) && plg[i].getNama().equalsIgnoreCase(n)){
                    JOptionPane.showMessageDialog(this, "Pelanggan ditemukan!");
                    ada=true;
                    String ab = JOptionPane.showInputDialog(this, "Alamat Baru : ");
                    int ykn=JOptionPane.showConfirmDialog(this, "Ganti alamat\n"+n+"  ["+ab+"] ?");
                    if(ykn==0){
                        plg[i].setAlamat(ab);
                        DefaultTableModel model=(DefaultTableModel)jTablePlg.getModel();
                        model.setValueAt(String.valueOf(ab), i, 2);
                        JOptionPane.showMessageDialog(this, "Alamat berhasil diubah...");
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal diubah...");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Pelanggan tidak ada...");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Pelanggan kosong...");
        }
    }//GEN-LAST:event_jButtonUbahPlg1ActionPerformed

    private void jButtonTambahPlg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahPlg1ActionPerformed
        // TODO add your handling code here:
        if(jPlg<maxPlg){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Nama Pelanggan  : ");
            for (int i = 0; i < jPlg; i++) {
                if(plg[i].getNama().equalsIgnoreCase(n)){
                    ada=true;
                    JOptionPane.showMessageDialog(this, "Maaf! \nNama sudah terdaftar.");
                    break;
                }
            }
            if(ada==false){
                String a = JOptionPane.showInputDialog(this, "Alamat          : ");
                int ykn=JOptionPane.showConfirmDialog(this, "Tambah pelanggan "+n+" ["+a+"] ?");
                if(ykn==0){
                    String k = String.valueOf(jPlg+1);
                    plg[jPlg]=new cPelanggan(n,a,k);
                    String kd=plg[jPlg].getKode();
                    String row[][]=new String[1][3];
                    row[0][0]=plg[jPlg].getNama();
                    row[0][1]=plg[jPlg].getKode();
                    row[0][2]=plg[jPlg].getAlamat();
                    DefaultTableModel model=(DefaultTableModel)jTablePlg.getModel();
                    model.addRow(row[0]);
                    JOptionPane.showMessageDialog(this, "Pelanggan Baru!\n"+n+" [ "+kd+" ]");
                    jPlg++;
                }else{
                    JOptionPane.showMessageDialog(this, "Batal ditambahkan...");
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Kapasitas pelanggan penuh");
        }
    }//GEN-LAST:event_jButtonTambahPlg1ActionPerformed

    private void jButtonHapusMnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusMnmActionPerformed
        // TODO add your handling code here:
        if(mnm!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Cari minuman : ");
            for (int i = 0; i < jMnm; i++) {
                if(mnm[i].getNama().equalsIgnoreCase(n)){
                    JOptionPane.showMessageDialog(this, "Menu ditemukan!");
                    ada=true;
                    int ykn=JOptionPane.showConfirmDialog(this, "Hapus menu "+n+"?");
                    if(ykn==0){
                        for (int j = i; j < jMnm; j++) {
                            if(j==jMnm-1){
                                mnm[j]=null;
                            }else{
                                mnm[j]=mnm[j+1];
                            }
                        }
                        DefaultTableModel model=(DefaultTableModel)jTableMnm.getModel();
                        model.removeRow(i);
                        JOptionPane.showMessageDialog(this, "Berhasil dihapus!");
                        jMnm--;
                        break;
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal dihapus!");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Menu "+n+" tidak ada!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Menu minuman kosong!");
        }

    }//GEN-LAST:event_jButtonHapusMnmActionPerformed

    private void jButtonUbahMnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahMnmActionPerformed
        // TODO add your handling code here:
        if(mnm!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Cari Minuman : ");
            for (int i = 0; i < jMnm; i++) {
                if(mnm[i].getNama().equalsIgnoreCase(n)){
                    JOptionPane.showMessageDialog(this, "Menu ditemukan!");
                    ada=true;
                    int hb=Integer.parseInt(JOptionPane.showInputDialog(this, "Harga Baru : "));
                    int ykn=JOptionPane.showConfirmDialog(this, "Ubah harga?");
                    if(ykn==0){
                        mnm[i].setHarga(hb);
                        DefaultTableModel model=(DefaultTableModel)jTableMnm.getModel();
                        model.setValueAt(String.valueOf(hb), i, 1);
                        JOptionPane.showMessageDialog(this, "Harga berhasil diubah!");
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal diubah!");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Minuman tidak ada!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Minuman kosong!");
        }
    }//GEN-LAST:event_jButtonUbahMnmActionPerformed

    private void jButtonTambahMnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahMnmActionPerformed
        // TODO add your handling code here:
        String n="0";
        do{
            if(jMnm<maxMnm){
                boolean ada=false;
                n = JOptionPane.showInputDialog(this, "--ketik '0' untuk selesai--\nNama Minuman  : ");
                if(!"0".equals(n)){
                    for (int i = 0; i < jMnm; i++) {
                        if(mnm[i].getNama().equalsIgnoreCase(n)){
                            ada=true;
                            JOptionPane.showMessageDialog(this, "Minuman sudah ada dalam menu!");
                            break;
                        }
                    }
                    if(ada==false){
                        int h=0;
                        h = Integer.parseInt(JOptionPane.showInputDialog(this, "Harga Minuman : "));
                        int ykn=JOptionPane.showConfirmDialog(this, "Tambah menu "+n+" ["+h+"] ?");
                        if(ykn==0&&h!=0){
                            mnm[jMnm]=new cMinuman(n,h);
                            rkpMenu[jRkp]=n;
                            jRkp++;
                            String row[][]=new String[1][2];
                            row[0][0]=mnm[jMnm].getNama();
                            row[0][1]=String.valueOf(mnm[jMnm].getHarga());
                            DefaultTableModel model=(DefaultTableModel)jTableMnm.getModel();
                            model.addRow(row[0]);
                            JOptionPane.showMessageDialog(this, n+" berhasil ditambahkan!");
                            jMnm++;
                        }else if(h==0){
                            JOptionPane.showMessageDialog(this, "Masukkan harga!");
                        }else{
                            JOptionPane.showMessageDialog(this, "Batal ditambahkan!");
                        }
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kapasitas minuman penuh");
            }
        }while(!"0".equals(n));
    }//GEN-LAST:event_jButtonTambahMnmActionPerformed

    private void jButtonHapusMknActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusMknActionPerformed
        // TODO add your handling code here:
        if(mkn!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Cari makanan : ");
            for (int i = 0; i < jMkn; i++) {
                if(mkn[i].getNama().equalsIgnoreCase(n)){
                    JOptionPane.showMessageDialog(this, "Menu ditemukan!");
                    ada=true;
                    int ykn=JOptionPane.showConfirmDialog(this, "Hapus menu "+n+"?");
                    if(ykn==0){
                        for (int j = i; j < jMkn; j++) {
                            if(j==jMkn-1){
                                mkn[j]=null;
                            }else{
                                mkn[j]=mkn[j+1];
                            }
                        }
                        DefaultTableModel model=(DefaultTableModel)jTableMkn.getModel();
                        model.removeRow(i);
                        JOptionPane.showMessageDialog(this, "Berhasil dihapus!");
                        jMkn--;
                        break;
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal dihapus!");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Menu "+n+" tidak ada!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Menu makanan kosong!");
        }

    }//GEN-LAST:event_jButtonHapusMknActionPerformed

    private void jButtonUbahMknActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahMknActionPerformed
        // TODO add your handling code here:
        if(mkn!=null){
            boolean ada=false;
            String n = JOptionPane.showInputDialog(this, "Cari makanan : ");
            for (int i = 0; i < jMkn; i++) {
                if(mkn[i].getNama().equalsIgnoreCase(n)){
                    JOptionPane.showMessageDialog(this, "Menu ditemukan!");
                    ada=true;
                    int hb=Integer.parseInt(JOptionPane.showInputDialog(this, "Harga Baru : "));
                    int ykn=JOptionPane.showConfirmDialog(this, "Ubah harga?");
                    if(ykn==0){
                        mkn[i].setHarga(hb);
                        DefaultTableModel model=(DefaultTableModel)jTableMkn.getModel();
                        model.setValueAt(String.valueOf(hb), i, 1);
                        JOptionPane.showMessageDialog(this, "Harga berhasil diubah!");
                    }else{
                        JOptionPane.showMessageDialog(this, "Batal diubah!");
                    }
                    break;
                }
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Makanan tidak ada!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Makanan kosong!");
        }

    }//GEN-LAST:event_jButtonUbahMknActionPerformed

    private void jButtonTambahMknActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahMknActionPerformed
        // TODO add your handling code here:
        String n="0";
        do{
            if(jMkn<maxMkn){
                boolean ada=false;
                n = JOptionPane.showInputDialog(this, "--ketik '0' untuk selesai--\nNama Makanan  : ");
                if(!"0".equals(n)){
                    for (int i = 0; i < jMkn; i++) {
                        if(mkn[i].getNama().equalsIgnoreCase(n)){
                            ada=true;
                            JOptionPane.showMessageDialog(this, "Makanan sudah ada dalam menu!");
                            break;
                        }
                    }
                    if(ada==false){
                        int h=0;
                        h = Integer.parseInt(JOptionPane.showInputDialog(this, "Harga Makanan : "));
                        int ykn=JOptionPane.showConfirmDialog(this, "Tambah menu "+n+" ["+h+"] ?");
                        if(ykn==0&&h!=0){
                            mkn[jMkn]=new cMakanan(n,h);
                            rkpMenu[jRkp]=n;
                            jRkp++;
                            String row[][]=new String[1][2];
                            row[0][0]=mkn[jMkn].getNama();
                            row[0][1]=String.valueOf(mkn[jMkn].getHarga());
                            DefaultTableModel model=(DefaultTableModel)jTableMkn.getModel();
                            model.addRow(row[0]);
                            JOptionPane.showMessageDialog(this, n+" berhasil ditambahkan!");
                            jMkn++;
                        }else if(h==0){
                            JOptionPane.showMessageDialog(this, "Masukkan harga!");
                        }else{
                            JOptionPane.showMessageDialog(this, "Batal ditambahkan!");
                        }
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kapasitas makanan penuh");
            }
        }while(!"0".equals(n));
    }//GEN-LAST:event_jButtonTambahMknActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    private void jButtonTotalPendapatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTotalPendapatanActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTableRekap.getModel();
        int baris=model.getRowCount();
        for (int i = 0; i < baris; i++) {
            model.removeRow(0);
        }
        jTFTotalP.setText("");
        int tp=0;
        String menuUrut[]=rkpMenu;
        int rpUrut[]=rkpRp;
        for (int i = 0; i < jRkp-1; i++) {
            for (int j = i+1; j < jRkp; j++) {
                if(rpUrut[i]<rpUrut[j]){
                    int t=rpUrut[j];
                    rpUrut[j]=rpUrut[i];
                    rpUrut[i]=t;
                    String temp=menuUrut[j];
                    menuUrut[j]=menuUrut[i];
                    menuUrut[i]=temp;
                }
            }
        }
        for (int i = 0; i < jRkp; i++) {
            tp=tp+rkpRp[i];
            String row[][]=new String[1][2];
            row[0][0]=menuUrut[i];
            row[0][1]=String.valueOf(rpUrut[i]);
            model.addRow(row[0]);
        }
        jTFTotalP.setText(String.valueOf(tp));
    }//GEN-LAST:event_jButtonTotalPendapatanActionPerformed

    private void jButtonPembelianPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPembelianPelangganActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTableRekap.getModel();
        int baris=model.getRowCount();
        for (int i = 0; i < baris; i++) {
            model.removeRow(0);
        }
        jTFTotalP.setText("");
        cPelanggan plgU[]=plg;
        for (int i = 0; i < jPlg-1; i++) {
            for (int j = i+1; j < jPlg; j++) {
                if(plgU[i].getTBlj()<plgU[j].getTBlj()){
                    cPelanggan t=plgU[j];
                    plgU[j]=plgU[i];
                    plgU[i]=t;
                }
            }
        }
        double tp=0;
        for (int i = 0; i < jPlg; i++) {
            String row[][]=new String[1][2];
            row[0][0]=plgU[i].getNama();
            row[0][1]=String.valueOf(plgU[i].getTBlj());
            model.addRow(row[0]);
            tp=tp+plgU[i].getTBlj();
        }
        String row[][]=new String[1][2];
        row[0][0]= "Non pelanggan";
        row[0][1]=String.valueOf(totalNPlg);
        model.addRow(row[0]);
        tp=tp+totalNPlg;
        jTFTotalP.setText(String.valueOf(tp));
    }//GEN-LAST:event_jButtonPembelianPelangganActionPerformed

    private void jButtonCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCariActionPerformed
        // TODO add your handling code here:
        if(jTrans!=0){
            boolean ada=false;
            String k=JOptionPane.showInputDialog(this, "---Pencarian Transaksi---\nKode Transaksi : ");
            for (int i = 0; i < jTrans; i++) {
                if(transaksi[i].getKode().equals(k)){
                    JOptionPane.showMessageDialog(this, transaksi[i].ToString());
                    ada=true;
                    break;
                }   
            }
            if(ada==false){
                JOptionPane.showMessageDialog(this, "Kode transaksi tidak ada!");
            }
        }
    }//GEN-LAST:event_jButtonCariActionPerformed
    
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cAppWarungGuiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cAppWarungGuiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cAppWarungGuiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cAppWarungGuiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cAppWarungGuiJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Kode;
    private javax.swing.JButton jButtonCari;
    private javax.swing.JButton jButtonCheckOut;
    private javax.swing.JButton jButtonHapusBeli;
    private javax.swing.JButton jButtonHapusMkn;
    private javax.swing.JButton jButtonHapusMnm;
    private javax.swing.JButton jButtonHapusPlg1;
    private javax.swing.JButton jButtonPembelianPelanggan;
    private javax.swing.JButton jButtonTambahBeli;
    private javax.swing.JButton jButtonTambahMkn;
    private javax.swing.JButton jButtonTambahMnm;
    private javax.swing.JButton jButtonTambahPlg1;
    private javax.swing.JButton jButtonTotalPendapatan;
    private javax.swing.JButton jButtonTransaksi;
    private javax.swing.JButton jButtonUbahBeli;
    private javax.swing.JButton jButtonUbahMkn;
    private javax.swing.JButton jButtonUbahMnm;
    private javax.swing.JButton jButtonUbahPlg1;
    private javax.swing.JLabel jLabelPembeli;
    private javax.swing.JLabel jLabelTP;
    private javax.swing.JPanel jPaneTransaksi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelMakanan;
    private javax.swing.JPanel jPanelMinuman;
    private javax.swing.JPanel jPanelPelanggan;
    private javax.swing.JPanel jPanelRekap;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTFKode;
    private javax.swing.JTextField jTFPembeli;
    private javax.swing.JTextField jTFTotalP;
    private javax.swing.JTabbedPane jTabbedPaneWarung;
    private javax.swing.JTable jTableMkn;
    private javax.swing.JTable jTableMnm;
    private javax.swing.JTable jTablePlg;
    private javax.swing.JTable jTableRekap;
    private javax.swing.JTable jTableTransaksi;
    // End of variables declaration//GEN-END:variables
}
